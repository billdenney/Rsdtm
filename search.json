[{"path":"https://billdenney.github.io/Rsdtm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"William Denney. Author, maintainer. Kiranmai Ganji. Contributor.","code":""},{"path":"https://billdenney.github.io/Rsdtm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Denney W (2022). Rsdtm: Study Data Tabulation Model (SDTM) import, export, management assistance. R package version 0.0.9017, https://billdenney.github.io/Rsdtm/.","code":"@Manual{,   title = {Rsdtm: Study Data Tabulation Model (SDTM) import, export, and management assistance},   author = {William Denney},   year = {2022},   note = {R package version 0.0.9017},   url = {https://billdenney.github.io/Rsdtm/}, }"},{"path":"https://billdenney.github.io/Rsdtm/index.html","id":"rsdtm","dir":"","previous_headings":"","what":"Study Data Tabulation Model (SDTM) import, export, and management assistance","title":"Study Data Tabulation Model (SDTM) import, export, and management assistance","text":"goal Rsdtm simplify SDTM data management file creation R.","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/index.html","id":"github","dir":"","previous_headings":"Installation","what":"GitHub","title":"Study Data Tabulation Model (SDTM) import, export, and management assistance","text":"install development version, run following:","code":"devtools::install_github(\"billdenney/Rsdtm\")"},{"path":"https://billdenney.github.io/Rsdtm/index.html","id":"cran-someday","dir":"","previous_headings":"Installation","what":"CRAN (someday)","title":"Study Data Tabulation Model (SDTM) import, export, and management assistance","text":"CRAN (someday), can install released version Rsdtm CRAN :","code":"install.packages(\"Rsdtm\")"},{"path":"https://billdenney.github.io/Rsdtm/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Study Data Tabulation Model (SDTM) import, export, and management assistance","text":"basic example shows solve common problem:","code":"library(Rsdtm) d <- import_sdtm(\"/director/to/data\")"},{"path":"https://billdenney.github.io/Rsdtm/reference/append_no_duplicate_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Add elements to a vector, only if names are not duplicated in x and\nvalues — append_no_duplicate_names","title":"Add elements to a vector, only if names are not duplicated in x and\nvalues — append_no_duplicate_names","text":"Add elements vector, names duplicated x values","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/append_no_duplicate_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add elements to a vector, only if names are not duplicated in x and\nvalues — append_no_duplicate_names","text":"","code":"append_no_duplicate_names(   x,   values,   after = length(x),   ignore_blank = TRUE,   method = stop )"},{"path":"https://billdenney.github.io/Rsdtm/reference/append_no_duplicate_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add elements to a vector, only if names are not duplicated in x and\nvalues — append_no_duplicate_names","text":"x, values, See base::append ignore_blank Ignore blank names? (Blank names \"\" occur unnamed vector appeneded named vector.) method Function notify user duplicate provided?  called message indicating name duplicate. Typically stop warning.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/append_no_duplicate_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add elements to a vector, only if names are not duplicated in x and\nvalues — append_no_duplicate_names","text":"See base::append","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/c_to_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract numeric values from character values — c_to_n","title":"Extract numeric values from character values — c_to_n","text":"Extract numeric values character values","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/c_to_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract numeric values from character values — c_to_n","text":"","code":"c_to_n(x, ...)  # S3 method for character c_to_n(   x,   ...,   pattern_numeric = paste0(\"^[+-]?\",     \"(?:[0-9]+|[0-9]+\\\\.|\\\\.[0-9]+|[0-9]+\\\\.[0-9]+)\", \"(?:[eE][+-]?[0-9]+)?$\"),   verbose = TRUE )  # S3 method for factor c_to_n(x, ...)  # S3 method for numeric c_to_n(x, ...)  # S3 method for integer c_to_n(x, ...)  # S3 method for logical c_to_n(x, ...)  # S3 method for data.frame c_to_n(x, ..., verbose = TRUE)"},{"path":"https://billdenney.github.io/Rsdtm/reference/c_to_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract numeric values from character values — c_to_n","text":"x object convert character numeric using SDTM ADaM rules. ... Passed `c_to_n()` methods pattern_numeric regular expression detect numeric values. verbose Report detailed status .","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/c_to_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract numeric values from character values — c_to_n","text":"vectors, numeric vector `NA` locations non-numeric   values.  data.frames similar, class object numeric   versions columns added.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/c_to_n.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract numeric values from character values — c_to_n","text":"main workhorse function c_to_n.character,   recognize following numeric types: positive negative (optional sign) classes integers optional decimal point number floating point numbers without number decimal point floating point numbers number decimal point scientific notation prior numeric types     coefficient optional sign exponent Spaces beginning end removed `trimws()`","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/c_to_n.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Extract numeric values from character values — c_to_n","text":"c_to_n(character): main workhorse function c_to_n c_to_n(factor): factors. c_to_n(numeric): numeric vectors. c_to_n(integer): integer vectors. c_to_n(logical): logical vectors (handles -NA case). c_to_n(data.frame): data.frames similar, finds columns matching regular expression pattern `\"^..(ST|).*C$\"`.  data.frame method replace numeric columns already exist.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/dateany_to_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat any date format (ISO8601 character string, POSIXt, or Date) to be a\nDate object — dateany_to_date","title":"Reformat any date format (ISO8601 character string, POSIXt, or Date) to be a\nDate object — dateany_to_date","text":"values must converted (without additional NA values created).  character strings, year-month-day part required ISO 8601 format, (ignored) time format requires separation \"T\".","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/dateany_to_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat any date format (ISO8601 character string, POSIXt, or Date) to be a\nDate object — dateany_to_date","text":"","code":"dateany_to_date(x)"},{"path":"https://billdenney.github.io/Rsdtm/reference/dateany_to_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat any date format (ISO8601 character string, POSIXt, or Date) to be a\nDate object — dateany_to_date","text":"x ISO8601 formatted character string, POSIXt object, Date object","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/dateany_to_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat any date format (ISO8601 character string, POSIXt, or Date) to be a\nDate object — dateany_to_date","text":"Date object","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/dateany_to_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reformat any date format (ISO8601 character string, POSIXt, or Date) to be a\nDate object — dateany_to_date","text":"","code":"dateany_to_date(\"2022-01-02\") #> [1] \"2022-01-02\" dateany_to_date(\"2022-01-02T03:04\") # the time part is automatically dropped #> [1] \"2022-01-02\" dateany_to_date(as.Date(\"2022-01-02\")) #> [1] \"2022-01-02\" dateany_to_date(as.POSIXct(\"2022-01-02T03:04\")) # the time part is still gone #> [1] \"2022-01-02\""},{"path":"https://billdenney.github.io/Rsdtm/reference/detect_domain.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect the SDTM or ADaM domain of a dataset (possibly via filename) — detect_domain","title":"Detect the SDTM or ADaM domain of a dataset (possibly via filename) — detect_domain","text":"Detect SDTM ADaM domain dataset (possibly via filename)","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/detect_domain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect the SDTM or ADaM domain of a dataset (possibly via filename) — detect_domain","text":"","code":"detect_domain(x, filename, verbose = TRUE)"},{"path":"https://billdenney.github.io/Rsdtm/reference/detect_domain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect the SDTM or ADaM domain of a dataset (possibly via filename) — detect_domain","text":"x data filename filename associated x verbose Report domain detected detection method?","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/detect_domain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect the SDTM or ADaM domain of a dataset (possibly via filename) — detect_domain","text":"character scalar name domain","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/generate_dtc.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert dates and times to SDTM-formatted ISO8601 datetime values — generate_dtc","title":"Convert dates and times to SDTM-formatted ISO8601 datetime values — generate_dtc","text":"Convert dates times SDTM-formatted ISO8601 datetime values","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/generate_dtc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert dates and times to SDTM-formatted ISO8601 datetime values — generate_dtc","text":"","code":"generate_dtc(   datetime = NULL,   date = NULL,   time = NULL,   early_hour = \"05\",   assume_24_hr_time = FALSE )"},{"path":"https://billdenney.github.io/Rsdtm/reference/generate_dtc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert dates and times to SDTM-formatted ISO8601 datetime values — generate_dtc","text":"datetime combined date/time representation (either ISO8601-formatted character string POSIXt object). date date (either ISO8601-formatted character string, Date object, POSIXt object). time time (ISO8601-formatted character string) early_hour hour day suggest times zero padded 12-hour clock instead 24-hour clock.  (See Details) assume_24_hr_time Assume times day 24-hour clock even hour `early_hour`.  (See Details)","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/generate_dtc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert dates and times to SDTM-formatted ISO8601 datetime values — generate_dtc","text":"SDTM-formatted ISO8601 date-time \"UN:UN:UN\" time   `NA`.  inputs `NA`, output also `NA`.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/generate_dtc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert dates and times to SDTM-formatted ISO8601 datetime values — generate_dtc","text":"times zero-padded (example, \"5:12\" instead   \"05:12\"), probability 12-hour clock instead   24-hour clock increased.  minimize impact ,   length time character string 4 7 characters, times less   `early_hour` trigger error assumption   generally activities happening middle night.    times known accurate, setting `assume_24_hr_time=TRUE`   prevent error simply pad strings zeros. non-NA value given `datetime`, values `date` `time`   ignored.","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/import_sdtm.html","id":null,"dir":"Reference","previous_headings":"","what":"Import an SDTM or ADaM file or directory of files — import_sdtm","title":"Import an SDTM or ADaM file or directory of files — import_sdtm","text":"Import SDTM ADaM file directory files","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/import_sdtm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import an SDTM or ADaM file or directory of files — import_sdtm","text":"","code":"import_sdtm(   path,   extension_choice = c(\".sas7bdat\", \".xpt\"),   ignore_case = TRUE,   ... )  import_sdtm_dir(   path,   extension_choice = c(\".sas7bdat\", \".xpt\"),   ignore_case = TRUE,   ignore_filename = c(),   ... )  import_sdtm_file(path, return_type = c(\"data.frame\", \"list\"), ...)"},{"path":"https://billdenney.github.io/Rsdtm/reference/import_sdtm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import an SDTM or ADaM file or directory of files — import_sdtm","text":"path path directory file. extension_choice file extension(s) searched within directory?  (one file extension exists, first extension extension_choice usable file used, warning given subsequent files. ignore_case Passed list.files loading directory. ... Arguments passed rio::import ignore_filename vector filenames load (case sensitive, filename excluding directory name) return_type loading single file, type output provided?","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/import_sdtm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import an SDTM or ADaM file or directory of files — import_sdtm","text":"directory vector files given path, list   data.frames; names list uppercase basename   file without extension.  single file given path,   data.frame.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/import_sdtm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import an SDTM or ADaM file or directory of files — import_sdtm","text":"error import filename base (filename without   path extension) .  can happen loading   one file name different directories multiple versions   file.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/import_sdtm.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Import an SDTM or ADaM file or directory of files — import_sdtm","text":"import_sdtm_dir(): Load directory SDTM files. import_sdtm_file(): Load single SDTM file.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_calendar_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if a string is an ISO 8601 calendar date — is_ISO8601_calendar_date","title":"Determine if a string is an ISO 8601 calendar date — is_ISO8601_calendar_date","text":"Determine string ISO 8601 calendar date","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_calendar_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if a string is an ISO 8601 calendar date — is_ISO8601_calendar_date","text":"","code":"is_ISO8601_calendar_date(x, ...)  is_ISO8601_week_date(x, ...)  is_ISO8601_ordinal_date(x, ...)"},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_calendar_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if a string is an ISO 8601 calendar date — is_ISO8601_calendar_date","text":"x vector character strings test ... Arguments passed pattern_ISO8601_calendar_date truncated date allowed truncated?  integer indicating highest required precision (0=day required, 1=month, 2=year).  value 3 allow empty string match. allow_before_year_1583 years 0 1582 allowed (allowed ISO 8601 mutual agreement) pattern_time string add day including time date (see pattern_ISO8601_time())","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_calendar_date.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Determine if a string is an ISO 8601 calendar date — is_ISO8601_calendar_date","text":"is_ISO8601_week_date(): Determine string ISO 8601 week date is_ISO8601_ordinal_date(): Determine string ISO 8601 ordinal date","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_calendar_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if a string matches an ISO 8601 date/time using calendar date\nnotation — is_ISO8601_calendar_datetime","title":"Determine if a string matches an ISO 8601 date/time using calendar date\nnotation — is_ISO8601_calendar_datetime","text":"Determine string matches ISO 8601 date/time using calendar date notation","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_calendar_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if a string matches an ISO 8601 date/time using calendar date\nnotation — is_ISO8601_calendar_datetime","text":"","code":"is_ISO8601_calendar_datetime(x, ...)"},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_calendar_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if a string matches an ISO 8601 date/time using calendar date\nnotation — is_ISO8601_calendar_datetime","text":"x vector character strings test ... Arguments passed pattern_ISO8601_calendar_datetime truncated date/time allowed truncated?  integer indicating highest required precision (0=second required, 1=minute, 2=hour, 3=day, 4=month, 5=year, 6=none).  value 6 allow empty string match.","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_ordinal_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if a string matches an ISO 8601 date/time using ordinal date notation — is_ISO8601_ordinal_datetime","title":"Determine if a string matches an ISO 8601 date/time using ordinal date notation — is_ISO8601_ordinal_datetime","text":"Determine string matches ISO 8601 date/time using ordinal date notation","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_ordinal_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if a string matches an ISO 8601 date/time using ordinal date notation — is_ISO8601_ordinal_datetime","text":"","code":"is_ISO8601_ordinal_datetime(x, ...)"},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_ordinal_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if a string matches an ISO 8601 date/time using ordinal date notation — is_ISO8601_ordinal_datetime","text":"x vector character strings test ... Arguments passed pattern_ISO8601_ordinal_datetime truncated date/time allowed truncated?  integer indicating highest required precision (0=second required, 1=minute, 2=hour, 3 4=day, 5=year, 6=none).  value 6 allow empty string match.","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if a string is an ISO 8601 time — is_ISO8601_time","title":"Determine if a string is an ISO 8601 time — is_ISO8601_time","text":"Determine string ISO 8601 time","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if a string is an ISO 8601 time — is_ISO8601_time","text":"","code":"is_ISO8601_time(x, ...)"},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if a string is an ISO 8601 time — is_ISO8601_time","text":"x vector character strings test ... Arguments passed pattern_ISO8601_time truncated date allowed truncated?  integer indicating highest required precision (0=second required, 1=minute, 2=hour).  value 3 allow empty string match. allow_fractional_hours,allow_fractional_minutes yet supported allow_fractional_seconds fractional seconds allowed? fractional_digits many digits allowed fractional time units?  0 indicates allowed, Inf indicates number allowed) pattern_decimal_mark regular expression patterns allowed decimal mark?  Comma period allowed standard default. timezone timezone optional (NA, default), required (TRUE), omitted (FALSE)? allow_leap_second leap seconds (61 seconds minute) allowed? require_T Require \"T\" beginning time?  TRUE, FALSE, NA (optional)","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_timezone.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if a string is an ISO 8601 timezone — is_ISO8601_timezone","title":"Determine if a string is an ISO 8601 timezone — is_ISO8601_timezone","text":"Determine string ISO 8601 timezone","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_timezone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if a string is an ISO 8601 timezone — is_ISO8601_timezone","text":"","code":"is_ISO8601_timezone(x)"},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_timezone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if a string is an ISO 8601 timezone — is_ISO8601_timezone","text":"x vector character strings test","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_week_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if a string matches an ISO 8601 date/time using week date notation — is_ISO8601_week_datetime","title":"Determine if a string matches an ISO 8601 date/time using week date notation — is_ISO8601_week_datetime","text":"Determine string matches ISO 8601 date/time using week date notation","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_week_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if a string matches an ISO 8601 date/time using week date notation — is_ISO8601_week_datetime","text":"","code":"is_ISO8601_week_datetime(x, ...)"},{"path":"https://billdenney.github.io/Rsdtm/reference/is_ISO8601_week_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if a string matches an ISO 8601 date/time using week date notation — is_ISO8601_week_datetime","text":"x vector character strings test ... Arguments passed pattern_ISO8601_week_datetime truncated date/time allowed truncated?  integer indicating highest required precision (0=second required, 1=minute, 2=hour, 3=day, 4=week, 5=year, 6=none).  value 6 allow empty string match.","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/make_dy.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate an SDTM --DY value from a date and a reference date — make_dy","title":"Calculate an SDTM --DY value from a date and a reference date — make_dy","text":"Calculate SDTM --DY value date reference date","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/make_dy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate an SDTM --DY value from a date and a reference date — make_dy","text":"","code":"make_dy(dates, refdt)"},{"path":"https://billdenney.github.io/Rsdtm/reference/make_dy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate an SDTM --DY value from a date and a reference date — make_dy","text":"dates dates calculation refdt dates reference","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/make_dy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate an SDTM --DY value from a date and a reference date — make_dy","text":"integer vector days since reference date according   SDTM calculation rules:  dates < refdt, difference days;   dates >= refdt, difference days plus one.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/make_dy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate an SDTM --DY value from a date and a reference date — make_dy","text":"dates refdt passed   dateany_to_date() ensure R Date class objects.","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/make_dy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate an SDTM --DY value from a date and a reference date — make_dy","text":"","code":"make_dy(c(\"2022-01-02\", \"2022-01-03\", \"2022-01-04\"), \"2022-01-03\") #> [1] -1  1  2"},{"path":"https://billdenney.github.io/Rsdtm/reference/make_param_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a parameter label combining specimen type, parameter name, and units — make_param_label","title":"Generate a parameter label combining specimen type, parameter name, and units — make_param_label","text":"Generate parameter label combining specimen type, parameter name, units","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/make_param_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a parameter label combining specimen type, parameter name, and units — make_param_label","text":"","code":"make_param_label(   spec,   param,   unit,   expect_single = TRUE,   allow_missing_spec = TRUE,   allow_missing_unit = TRUE )"},{"path":"https://billdenney.github.io/Rsdtm/reference/make_param_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a parameter label combining specimen type, parameter name, and units — make_param_label","text":"spec Specimen type (typically, \"blood\", \"plasma\", etc.) param Parameter name (thing measured) unit Units measure expect_single single parameter label generated (may vector)? allow_missing_spec, allow_missing_unit spec unit parameters allowed NA?","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/make_param_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a parameter label combining specimen type, parameter name, and units — make_param_label","text":"character vector.","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/make_sdtm_domain_from_domain.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the domain from a dataset. — make_sdtm_domain_from_domain","title":"Extract the domain from a dataset. — make_sdtm_domain_from_domain","text":"Extract domain dataset.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/make_sdtm_domain_from_domain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the domain from a dataset. — make_sdtm_domain_from_domain","text":"","code":"make_sdtm_domain_from_domain(data)"},{"path":"https://billdenney.github.io/Rsdtm/reference/make_sdtm_domain_from_domain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the domain from a dataset. — make_sdtm_domain_from_domain","text":"data data DOMAIN column extraction","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/make_sdtm_domain_from_filename.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify a filename down to the SDTM list name that should be provided. — make_sdtm_domain_from_filename","title":"Simplify a filename down to the SDTM list name that should be provided. — make_sdtm_domain_from_filename","text":"Simplify filename SDTM list name provided.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/make_sdtm_domain_from_filename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify a filename down to the SDTM list name that should be provided. — make_sdtm_domain_from_filename","text":"","code":"make_sdtm_domain_from_filename(filenames = NULL)"},{"path":"https://billdenney.github.io/Rsdtm/reference/make_sdtm_domain_from_filename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify a filename down to the SDTM list name that should be provided. — make_sdtm_domain_from_filename","text":"filenames filenames simplify.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/merge_supp.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge a supplementary dataset into a primary dataset — merge_supp","title":"Merge a supplementary dataset into a primary dataset — merge_supp","text":"Merge supplementary dataset primary dataset","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/merge_supp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge a supplementary dataset into a primary dataset — merge_supp","text":"","code":"merge_supp(   primary,   supplementary,   remove_attributes = c(\"label\"),   auto_convert = FALSE )"},{"path":"https://billdenney.github.io/Rsdtm/reference/merge_supp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge a supplementary dataset into a primary dataset — merge_supp","text":"primary data.frame primary dataset supplementary data.frame supplementary dataset remove_attributes TRUE, remove attributes columns (break many classes); FALSE, remove attributes columns; character, remove attributes columns. auto_convert data automatically converted using `type_convert()`?","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/merge_supp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge a supplementary dataset into a primary dataset — merge_supp","text":"primary merged supplementary new column   names come QNAM column supplementary","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_any_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a regular expression matching any ISO8601 date format — pattern_ISO8601_any_date","title":"Generate a regular expression matching any ISO8601 date format — pattern_ISO8601_any_date","text":"Generate regular expression matching ISO8601 date format","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_any_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a regular expression matching any ISO8601 date format — pattern_ISO8601_any_date","text":"","code":"pattern_ISO8601_any_date(   truncated = 0,   allow_before_year_1583 = FALSE,   pattern_time = \"\",   ... )"},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_any_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a regular expression matching any ISO8601 date format — pattern_ISO8601_any_date","text":"truncated date allowed truncated?  integer indicating highest required precision (0=day required, 1=month week, 2=year).  value 3 allow empty string match. allow_before_year_1583 years 0 1582 allowed (allowed ISO 8601 mutual agreement) pattern_time string add day including time date (see pattern_ISO8601_time()) ... Ignored","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_any_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a regular expression matching any ISO8601 date format — pattern_ISO8601_any_date","text":"matches YYYY-MM-DD (year-month-day), YYYY-Www-d, YYYY-DDD   formats. Basic format (without dashes) supported.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_any_date.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate a regular expression matching any ISO8601 date format — pattern_ISO8601_any_date","text":"https://en.wikipedia.org/wiki/ISO_8601","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_any_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a regular expression matching any ISO8601 date format with time — pattern_ISO8601_any_datetime","title":"Generate a regular expression matching any ISO8601 date format with time — pattern_ISO8601_any_datetime","text":"Generate regular expression matching ISO8601 date format time","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_any_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a regular expression matching any ISO8601 date format with time — pattern_ISO8601_any_datetime","text":"","code":"pattern_ISO8601_any_datetime(truncated = 0, ...)"},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_any_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a regular expression matching any ISO8601 date format with time — pattern_ISO8601_any_datetime","text":"truncated date/time allowed truncated?  integer indicating highest required precision (0=second required, 1=minute, 2=hour, 3=day, 4=month week, 5=year, 6=none).  value 6 allow empty string match. ... Passed pattern_ISO8601_any_date() pattern_ISO8601_time()","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_calendar_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a regular expression matching an ISO8601 calendar date — pattern_ISO8601_calendar_date","title":"Generate a regular expression matching an ISO8601 calendar date — pattern_ISO8601_calendar_date","text":"Generate regular expression matching ISO8601 calendar date","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_calendar_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a regular expression matching an ISO8601 calendar date — pattern_ISO8601_calendar_date","text":"","code":"pattern_ISO8601_calendar_date(   truncated = 0,   allow_before_year_1583 = FALSE,   pattern_time = \"\",   ... )"},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_calendar_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a regular expression matching an ISO8601 calendar date — pattern_ISO8601_calendar_date","text":"truncated date allowed truncated?  integer indicating highest required precision (0=day required, 1=month, 2=year).  value 3 allow empty string match. allow_before_year_1583 years 0 1582 allowed (allowed ISO 8601 mutual agreement) pattern_time string add day including time date (see pattern_ISO8601_time()) ... Ignored","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_calendar_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a regular expression matching an ISO8601 calendar date — pattern_ISO8601_calendar_date","text":"matches general pattern YYYY-MM-DD (year-month-day).   Basic format (without dashes) supported.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_calendar_date.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate a regular expression matching an ISO8601 calendar date — pattern_ISO8601_calendar_date","text":"https://en.wikipedia.org/wiki/ISO_8601","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_calendar_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a regular expression matching an ISO8601 calendar date with time — pattern_ISO8601_calendar_datetime","title":"Generate a regular expression matching an ISO8601 calendar date with time — pattern_ISO8601_calendar_datetime","text":"Generate regular expression matching ISO8601 calendar date time","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_calendar_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a regular expression matching an ISO8601 calendar date with time — pattern_ISO8601_calendar_datetime","text":"","code":"pattern_ISO8601_calendar_datetime(truncated = 0, ...)"},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_calendar_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a regular expression matching an ISO8601 calendar date with time — pattern_ISO8601_calendar_datetime","text":"truncated date/time allowed truncated?  integer indicating highest required precision (0=second required, 1=minute, 2=hour, 3=day, 4=month, 5=year, 6=none).  value 6 allow empty string match. ... Passed pattern_ISO8601_calendar_date() pattern_ISO8601_time()","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_calendar_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a regular expression matching an ISO8601 calendar year — pattern_ISO8601_calendar_year","title":"Generate a regular expression matching an ISO8601 calendar year — pattern_ISO8601_calendar_year","text":"Generate regular expression matching ISO8601 calendar year","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_calendar_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a regular expression matching an ISO8601 calendar year — pattern_ISO8601_calendar_year","text":"","code":"pattern_ISO8601_calendar_year(allow_before_year_1583 = FALSE)"},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_calendar_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a regular expression matching an ISO8601 calendar year — pattern_ISO8601_calendar_year","text":"allow_before_year_1583 years 0 1582 allowed (allowed ISO 8601 mutual agreement)","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_calendar_year.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a regular expression matching an ISO8601 calendar year — pattern_ISO8601_calendar_year","text":"Sign year (+ -) supported (therefore years   0000 supported). Years 9999 supported.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_calendar_year.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate a regular expression matching an ISO8601 calendar year — pattern_ISO8601_calendar_year","text":"https://en.wikipedia.org/wiki/ISO_8601","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_date_builder.html","id":null,"dir":"Reference","previous_headings":"","what":"Build an ISO8601 date pattern from the year, middle (month or week), day, and\ntime patterns. — pattern_ISO8601_date_builder","title":"Build an ISO8601 date pattern from the year, middle (month or week), day, and\ntime patterns. — pattern_ISO8601_date_builder","text":"Build ISO8601 date pattern year, middle (month week), day, time patterns.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_date_builder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build an ISO8601 date pattern from the year, middle (month or week), day, and\ntime patterns. — pattern_ISO8601_date_builder","text":"","code":"pattern_ISO8601_date_builder(   truncated,   pattern_year,   pattern_middle,   pattern_day,   pattern_time,   allow_before_year_1583 )"},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_date_builder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build an ISO8601 date pattern from the year, middle (month or week), day, and\ntime patterns. — pattern_ISO8601_date_builder","text":"truncated date/time allowed truncated?  integer indicating highest required precision (0=second required, 1=minute, 2=hour, 3=day, 4=month week, 5=year, 6=none).  value 6 allow empty string match. pattern_year pattern ISO8601 year (ignored allow_before_year_1583 given); null, middle day part returned without year part. pattern_middle pattern ISO8601 month week (NULL ordinal dates) pattern_day pattern ISO8601 day pattern_time string add day including time date (see pattern_ISO8601_time()) allow_before_year_1583 years 0 1582 allowed (allowed ISO 8601 mutual agreement)","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_ordinal_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a regular expression matching an ISO8601 ordinal date — pattern_ISO8601_ordinal_date","title":"Generate a regular expression matching an ISO8601 ordinal date — pattern_ISO8601_ordinal_date","text":"Generate regular expression matching ISO8601 ordinal date","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_ordinal_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a regular expression matching an ISO8601 ordinal date — pattern_ISO8601_ordinal_date","text":"","code":"pattern_ISO8601_ordinal_date(   truncated = 0,   allow_before_year_1583 = FALSE,   pattern_time = \"\",   ... )"},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_ordinal_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a regular expression matching an ISO8601 ordinal date — pattern_ISO8601_ordinal_date","text":"truncated date allowed truncated?  integer indicating highest required precision (0 1=day required 2=year).  value 3 allow empty string match. allow_before_year_1583 years 0 1582 allowed (allowed ISO 8601 mutual agreement) pattern_time string add day including time date (see pattern_ISO8601_time()) ... Ignored","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_ordinal_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a regular expression matching an ISO8601 ordinal date — pattern_ISO8601_ordinal_date","text":"matches general pattern yyyy-ddd (year-day year).   Leap days allowed, year confirmed leap year.   Basic format (without dashes) supported.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_ordinal_date.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate a regular expression matching an ISO8601 ordinal date — pattern_ISO8601_ordinal_date","text":"https://en.wikipedia.org/wiki/ISO_8601","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_ordinal_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a regular expression matching an ISO8601 ordinal date with time — pattern_ISO8601_ordinal_datetime","title":"Generate a regular expression matching an ISO8601 ordinal date with time — pattern_ISO8601_ordinal_datetime","text":"Generate regular expression matching ISO8601 ordinal date time","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_ordinal_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a regular expression matching an ISO8601 ordinal date with time — pattern_ISO8601_ordinal_datetime","text":"","code":"pattern_ISO8601_ordinal_datetime(truncated = 0, ...)"},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_ordinal_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a regular expression matching an ISO8601 ordinal date with time — pattern_ISO8601_ordinal_datetime","text":"truncated date/time allowed truncated?  integer indicating highest required precision (0=second required, 1=minute, 2=hour, 3 4=day, 5=year, 6=none).  value 6 allow empty string match. ... Passed pattern_ISO8601_week_date() pattern_ISO8601_time()","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a regular expression for ISO 8601 times — pattern_ISO8601_time","title":"Generate a regular expression for ISO 8601 times — pattern_ISO8601_time","text":"Fractional hours minutes allowed generated regular expressions even though allowed ISO 8601 standard.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a regular expression for ISO 8601 times — pattern_ISO8601_time","text":"","code":"pattern_ISO8601_time(   truncated = 0,   allow_fractional_hours = FALSE,   allow_fractional_minutes = FALSE,   allow_fractional_seconds = TRUE,   fractional_digits = Inf,   pattern_decimal_mark = c(\"\\\\.\", \",\"),   timezone = NA,   allow_leap_second = FALSE,   require_T = NA,   ... )"},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a regular expression for ISO 8601 times — pattern_ISO8601_time","text":"truncated date allowed truncated?  integer indicating highest required precision (0=second required, 1=minute, 2=hour).  value 3 allow empty string match. allow_fractional_hours, allow_fractional_minutes yet supported allow_fractional_seconds fractional seconds allowed? fractional_digits many digits allowed fractional time units?  0 indicates allowed, Inf indicates number allowed) pattern_decimal_mark regular expression patterns allowed decimal mark?  Comma period allowed standard default. timezone timezone optional (NA, default), required (TRUE), omitted (FALSE)? allow_leap_second leap seconds (61 seconds minute) allowed? require_T Require \"T\" beginning time?  TRUE, FALSE, NA (optional) ... Passed pattern_ISO8601_timezone()","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a regular expression for ISO 8601 times — pattern_ISO8601_time","text":"Leap seconds occur 23:59:60Z end month.  Given timezone differences occur different hours end 15-minute point, allow_leap_seconds makes change allow 60 seconds minute.","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_timezone.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a regular expression for ISO 8601 timezones. — pattern_ISO8601_timezone","title":"Generate a regular expression for ISO 8601 timezones. — pattern_ISO8601_timezone","text":"Generate regular expression ISO 8601 timezones.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_timezone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a regular expression for ISO 8601 timezones. — pattern_ISO8601_timezone","text":"","code":"pattern_ISO8601_timezone()"},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_timezone.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a regular expression for ISO 8601 timezones. — pattern_ISO8601_timezone","text":"Offsets always multiples 15 minutes, minute part   provided, must 00, 15, 30, 45.  range allowed function   bit wider current range writing function.   allowed range -14:45 +14:45 actual widest range   currently -12:00 +14:00. According ISO standard, zero must always preceded +   never negative.  , \"Z\" allowed.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_timezone.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate a regular expression for ISO 8601 timezones. — pattern_ISO8601_timezone","text":"https://en.wikipedia.org/wiki/UTC_offset","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_week_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a regular expression matching an ISO8601 week date — pattern_ISO8601_week_date","title":"Generate a regular expression matching an ISO8601 week date — pattern_ISO8601_week_date","text":"Generate regular expression matching ISO8601 week date","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_week_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a regular expression matching an ISO8601 week date — pattern_ISO8601_week_date","text":"","code":"pattern_ISO8601_week_date(   truncated = 0,   allow_before_year_1583 = FALSE,   pattern_time = \"\",   ... )"},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_week_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a regular expression matching an ISO8601 week date — pattern_ISO8601_week_date","text":"truncated date allowed truncated?  integer indicating highest required precision (0=day required, 1=week, 2=year).  value 3 allow empty string match. allow_before_year_1583 years 0 1582 allowed (allowed ISO 8601 mutual agreement) pattern_time string add day including time date (see pattern_ISO8601_time()) ... Ignored","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_week_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a regular expression matching an ISO8601 week date — pattern_ISO8601_week_date","text":"matches general pattern yyyy-Www-d (year-week   year-day week). Basic format (without dashes) supported.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_week_date.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate a regular expression matching an ISO8601 week date — pattern_ISO8601_week_date","text":"https://en.wikipedia.org/wiki/ISO_8601","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_week_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a regular expression matching an ISO8601 week date with time — pattern_ISO8601_week_datetime","title":"Generate a regular expression matching an ISO8601 week date with time — pattern_ISO8601_week_datetime","text":"Generate regular expression matching ISO8601 week date time","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_week_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a regular expression matching an ISO8601 week date with time — pattern_ISO8601_week_datetime","text":"","code":"pattern_ISO8601_week_datetime(truncated = 0, ...)"},{"path":"https://billdenney.github.io/Rsdtm/reference/pattern_ISO8601_week_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a regular expression matching an ISO8601 week date with time — pattern_ISO8601_week_datetime","text":"truncated date/time allowed truncated?  integer indicating highest required precision (0=second required, 1=minute, 2=hour, 3=day, 4=week, 5=year, 6=none).  value 6 allow empty string match. ... Passed pattern_ISO8601_week_date() pattern_ISO8601_time()","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/scale_x_VISITDY.html","id":null,"dir":"Reference","previous_headings":"","what":"A scale for ggplots with SDTM day (DY) numbering — scale_x_VISITDY","title":"A scale for ggplots with SDTM day (DY) numbering — scale_x_VISITDY","text":"scale skip 0, always show 1 (range data), provide breaks preference toward week scales, provide minor breaks every day.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/scale_x_VISITDY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A scale for ggplots with SDTM day (DY) numbering — scale_x_VISITDY","text":"","code":"scale_x_VISITDY(...)"},{"path":"https://billdenney.github.io/Rsdtm/reference/scale_x_VISITDY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A scale for ggplots with SDTM day (DY) numbering — scale_x_VISITDY","text":"... Passed ggplot2::scale_x_continuous()","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/scale_x_VISITDY.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A scale for ggplots with SDTM day (DY) numbering — scale_x_VISITDY","text":"","code":"if (FALSE) { ggplot(data.frame(x=-7:14, y=-7:14), aes(x=x, y=y, label=x)) +   scale_x_VISITDY() +   geom_text() }"},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_dtc_to_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the character representation of the date in an original SDTM dataset\nto a POSIXct object. — sdtm_dtc_to_datetime","title":"Convert the character representation of the date in an original SDTM dataset\nto a POSIXct object. — sdtm_dtc_to_datetime","text":"Convert character representation date original SDTM dataset POSIXct object.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_dtc_to_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the character representation of the date in an original SDTM dataset\nto a POSIXct object. — sdtm_dtc_to_datetime","text":"","code":"sdtm_dtc_to_datetime(x, ...)  # S3 method for list sdtm_dtc_to_datetime(x, ...)  # S3 method for data.frame sdtm_dtc_to_datetime(x, date_col_pattern = \"DTC$\", truncated = 5, ...)"},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_dtc_to_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the character representation of the date in an original SDTM dataset\nto a POSIXct object. — sdtm_dtc_to_datetime","text":"x data convert ... Additional arguments passed lubridate::ymd_hms date_col_pattern regex search column names dates convert. truncated Passed lubridate::ymd_hms","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_dtc_to_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the character representation of the date in an original SDTM dataset\nto a POSIXct object. — sdtm_dtc_to_datetime","text":"data date converted.  Note dates   returned POSIXct objects, partial dates appear ","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_ae.html","id":null,"dir":"Reference","previous_headings":"","what":"Example SDTM Adverse Events Data — sdtm_example_dataverse_ae","title":"Example SDTM Adverse Events Data — sdtm_example_dataverse_ae","text":"Example SDTM Adverse Events Data","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_ae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example SDTM Adverse Events Data — sdtm_example_dataverse_ae","text":"","code":"sdtm_example_dataverse_ae"},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_ae.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example SDTM Adverse Events Data — sdtm_example_dataverse_ae","text":"data frame 18 variables 16 observations: STUDYID Study Identifier, character DOMAIN Domain Abbreviation, character USUBJID Unique Subject Identifier, character AESEQ Sequence Number, numeric AESPID Sponsor-Defined Identifier, character AETERM Reported Term Adverse Event, character AEMODIFY Modified Reported Term, character AEDECOD Dictionary-Derived Term, character AEBODSYS Body System Organ Class, character AESEV Severity/Intensity, character AESER Serious Event, character AEACN Action Taken Study Treatment, character AEREL Causality, character AESTDTC Start Date/Time Adverse Event, character, ISO8601 AEENDTC End Date/Time Adverse Event, character, ISO8601 AESTDY Study Day Start Adverse Event, numeric AEENDY Study Day End Adverse Event, numeric AEENRF End Relative Reference Period, character","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_ae.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example SDTM Adverse Events Data — sdtm_example_dataverse_ae","text":"https://doi.org/10.7910/DVN/51B6NK","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Example SDTM Demographics Data — sdtm_example_dataverse_dm","title":"Example SDTM Demographics Data — sdtm_example_dataverse_dm","text":"Example SDTM Demographics Data","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example SDTM Demographics Data — sdtm_example_dataverse_dm","text":"","code":"sdtm_example_dataverse_dm"},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_dm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example SDTM Demographics Data — sdtm_example_dataverse_dm","text":"data frame 16 variables 5 observations: STUDYID Study Identifier, character DOMAIN Domain Abbreviation, character USUBJID Unique Subject Identifier, character SUBJID Subject Identifier Study, character RFSTDTC Subject Reference Start Date/Time, character, ISO 8601 RFENDTC Subject Reference End Date/Time, character, ISO 8601 SITEID Study Site Identifier, character BRTHDTC Date/Time Birth, character, ISO 8601 AGE Age, numeric AGEU Age Units, character SEX Sex, character RACE Race , character ETHNIC Ethnicity, character ARMCD Planned Arm Code, character ARM Description Planned Arm, character COUNTRY Country, character","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_dm.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example SDTM Demographics Data — sdtm_example_dataverse_dm","text":"https://doi.org/10.7910/DVN/51B6NK","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_eg.html","id":null,"dir":"Reference","previous_headings":"","what":"Example SDTM ECG Test Results Data — sdtm_example_dataverse_eg","title":"Example SDTM ECG Test Results Data — sdtm_example_dataverse_eg","text":"Example SDTM ECG Test Results Data","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_eg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example SDTM ECG Test Results Data — sdtm_example_dataverse_eg","text":"","code":"sdtm_example_dataverse_eg"},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_eg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example SDTM ECG Test Results Data — sdtm_example_dataverse_eg","text":"data frame 21 variables 56 observations: STUDYID Study Identifier, character DOMAIN Domain Abbreviation, character USUBJID Unique Subject Identifier, character EGSEQ Sequence Number, numeric EGSPID Sponsor-Defined Identifier, character EGTESTCD ECG Test Examination Short Name, character EGTEST ECG Test Examination Name, character EGPOS ECG Position Subject, character EGORRES Result Finding Original Units, character EGORRESU Original Units, character EGSTRESC Character Result/Finding Std Format, character EGSTRESN Numeric Result/Finding Standard Units, numeric EGSTRESU Standard Units, character EGBLFL Baseline Flag, character EGDRVFL Derived Flag, character EGEVAL Evaluator, character VISITNUM Visit Number, numeric VISIT Visit Name, character VISITDY Planned Study Day Visit, numeric EGDTC Date/Time ECG, character, ISO 8601 EGDY Study Day ECG, numeric","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_eg.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example SDTM ECG Test Results Data — sdtm_example_dataverse_eg","text":"https://doi.org/10.7910/DVN/51B6NK","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_lb.html","id":null,"dir":"Reference","previous_headings":"","what":"Example SDTM Laboratory Test Results Data — sdtm_example_dataverse_lb","title":"Example SDTM Laboratory Test Results Data — sdtm_example_dataverse_lb","text":"Example SDTM Laboratory Test Results Data","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_lb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example SDTM Laboratory Test Results Data — sdtm_example_dataverse_lb","text":"","code":"sdtm_example_dataverse_lb"},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_lb.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example SDTM Laboratory Test Results Data — sdtm_example_dataverse_lb","text":"data frame 29 variables 83 observations: STUDYID Study Identifier, character DOMAIN Domain Abbreviation, character USUBJID Unique Subject Identifier, character LBSEQ Sequence Number, numeric LBREFID Specimen ID, character LBTESTCD Lab Test Examination Short Name, character LBTEST Lab Test Examination Name, character LBCAT Category Lab Test, character LBSCAT Subcategory Lab Test, character LBORRES Result Finding Original Units, character LBORRESU Original Units, character LBORNRLO Reference Range Lower Limit Orig Unit, character LBORNRHI Reference Range Upper Limit Orig Unit, character LBSTRESC Character Result/Finding Std Format, character LBSTRESN Numeric Result/Finding Standard Units, numeric LBSTRESU Standard Units, character LBSTNRLO Reference Range Lower Limit-Std Units, numeric LBSTNRHI Reference Range Upper Limit-Std Units, numeric LBSTNRC Reference Range Char Rslt-Std Units, character LBNRIND Reference Range Indicator, character LBSPEC Specimen Type, character LBMETHOD Method Test Examination, character LBBLFL Baseline Flag, character LBFAST Fasting Status, character VISITNUM Visit Number, numeric VISIT Visit Name, character VISITDY Planned Study Day Visit, numeric LBDTC Date/time Specimen Collection, character, ISO 8601 LBDY Study Day Specimen Collection, numeric","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_lb.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example SDTM Laboratory Test Results Data — sdtm_example_dataverse_lb","text":"https://doi.org/10.7910/DVN/51B6NK","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_mh.html","id":null,"dir":"Reference","previous_headings":"","what":"Example SDTM Medical History Data — sdtm_example_dataverse_mh","title":"Example SDTM Medical History Data — sdtm_example_dataverse_mh","text":"Example SDTM Medical History Data","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_mh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example SDTM Medical History Data — sdtm_example_dataverse_mh","text":"","code":"sdtm_example_dataverse_mh"},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_mh.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example SDTM Medical History Data — sdtm_example_dataverse_mh","text":"data frame 12 variables 18 observations: STUDYID Study Identifier, character DOMAIN Domain Abbreviation, character USUBJID Unique Subject Identifier, character MHSEQ Sequence Number, numeric MHTERM Reported Term Medical History, character MHCAT Category Medical History, character MHPRESP Medical History Event Pre- Specified, character MHOCCUR Medical History Occurrence, character MHBODSYS Body System Organ Class, character MHDTC Date/Time History Collection, character, ISO 8601 MHSTDTC Start Date/Time Medical History Event, character, ISO 8601 MHENRF End Relative Reference Period, character","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_mh.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example SDTM Medical History Data — sdtm_example_dataverse_mh","text":"https://doi.org/10.7910/DVN/51B6NK","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_pe.html","id":null,"dir":"Reference","previous_headings":"","what":"Example SDTM Physical Examination Data — sdtm_example_dataverse_pe","title":"Example SDTM Physical Examination Data — sdtm_example_dataverse_pe","text":"Example SDTM Physical Examination Data","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_pe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example SDTM Physical Examination Data — sdtm_example_dataverse_pe","text":"","code":"sdtm_example_dataverse_pe"},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_pe.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example SDTM Physical Examination Data — sdtm_example_dataverse_pe","text":"data frame 13 variables 65 observations: STUDYID Study Identifier, character DOMAIN Domain Abbreviation, character USUBJID Unique Subject Identifier, character PESEQ Sequence Number, numeric PETESTCD Body System Examined Short Name, character PETEST Body System Examined, character PEORRES Verbatim Examination Finding, character PESTRESC Character Result/Finding Standard Format, character VISITNUM Visit Number, numeric VISIT Visit Name, character VISITDY Planned Study Day Visit, numeric PEDTC Date/Time Examination, character, ISO 8601 PEDY Study Day Examination, numeric","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_pe.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example SDTM Physical Examination Data — sdtm_example_dataverse_pe","text":"https://doi.org/10.7910/DVN/51B6NK","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_vs.html","id":null,"dir":"Reference","previous_headings":"","what":"Example SDTM Vital Signs Data — sdtm_example_dataverse_vs","title":"Example SDTM Vital Signs Data — sdtm_example_dataverse_vs","text":"Example SDTM Vital Signs Data","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_vs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example SDTM Vital Signs Data — sdtm_example_dataverse_vs","text":"","code":"sdtm_example_dataverse_vs"},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_vs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example SDTM Vital Signs Data — sdtm_example_dataverse_vs","text":"data frame 18 variables 72 observations: STUDYID Study Identifier, character DOMAIN Domain Abbreviation, character USUBJID Unique Subject Identifier, character VSSEQ Sequence Number, numeric VSTESTCD Vital Signs Test Short Name, character VSTEST Vital Signs Test Name, character VSPOS Vital Signs Position Subject, character VSORRES Result Finding Original Units, character VSORRESU Original Units, character VSSTRESC Character Result/Finding Std Format, character VSSTRESN Numeric Result/Finding Standard Units, numeric VSSTRESU Standard Units, character VSBLFL Baseline Flag, character VISITNUM Visit Number, numeric VISIT Visit Name, character VISITDY Planned Study Day Visit, numeric VSDTC Date/Time Measurements, character, ISO 8601 VSDY Study Day Vital Signs, numeric","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_dataverse_vs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example SDTM Vital Signs Data — sdtm_example_dataverse_vs","text":"https://doi.org/10.7910/DVN/51B6NK","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_theoph_ex.html","id":null,"dir":"Reference","previous_headings":"","what":"Example SDTM Exposure Data — sdtm_example_theoph_ex","title":"Example SDTM Exposure Data — sdtm_example_theoph_ex","text":"Example SDTM Exposure Data","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_theoph_ex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example SDTM Exposure Data — sdtm_example_theoph_ex","text":"","code":"sdtm_example_theoph_ex"},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_theoph_ex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example SDTM Exposure Data — sdtm_example_theoph_ex","text":"data frame 9 variables 12 observations: STUDYID Study Identifier, character DOMAIN Domain Abbreviation, character SUBJID Subject Identifier Study, character USUBJID Unique Subject Identifier, character EXSEQ Sequence Number, numeric EXTRT Name Treatment, character EXDOSE Dose, Numeric EXDOSU Dose Units, character EXROUTE Route Administration, character EXSTDTC Start Date/Time Treatment, character, ISO 8601","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_theoph_pc.html","id":null,"dir":"Reference","previous_headings":"","what":"Example SDTM Pharmacokinetics Concentration Data — sdtm_example_theoph_pc","title":"Example SDTM Pharmacokinetics Concentration Data — sdtm_example_theoph_pc","text":"Example SDTM Pharmacokinetics Concentration Data","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_theoph_pc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example SDTM Pharmacokinetics Concentration Data — sdtm_example_theoph_pc","text":"","code":"sdtm_example_theoph_pc"},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_example_theoph_pc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example SDTM Pharmacokinetics Concentration Data — sdtm_example_theoph_pc","text":"data frame 15 variables 132 observations: STUDYID Study Identifier, character DOMAIN Domain Abbreviation, character SUBJID Subject Identifier Study, character USUBJID Unique Subject Identifier, character PCSEQ Sequence Number, numeric PCTESTCD Pharmacokinetic Test Short Name, character PCTEST Pharmacokinetic Test Name, character PCORRES Result Finding Original Units, character PCORRESU Original Units, character PCSTRESC Character Result/Finding Standard Format, character PCSTRESN Numeric Result/Finding Standard Units, numeric PCSTRESU Standard Units, character PCDTC Date/Time Specimen Collection, character, ISO 8601 PCTPT Planned Time Point Name, character PCTPTNUM Planned Time Point Number, numeric","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_first_dose.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the time of the first dose — sdtm_first_dose","title":"Find the time of the first dose — sdtm_first_dose","text":"Find time first dose","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_first_dose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the time of the first dose — sdtm_first_dose","text":"","code":"sdtm_first_dose(x, ...)  # S3 method for list sdtm_first_dose(x, ...)  # S3 method for data.frame sdtm_first_dose(   x,   trt_value = NULL,   trt_col = c(\"EXTRT\", \"TRT\"),   dtc_col = c(\"EXSTDTC\", \"EXDTC\", \"STDTC\", \"DTC\"),   ... )"},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_first_dose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the time of the first dose — sdtm_first_dose","text":"x EX domain SDTM list EX domain element named \"EX\" contains EX domain. ... Arguments passed methods. trt_value vector treatments (trt_col) first dose subject. trt_col vector column names search trt_value.  one columns can x, others ignored. dtc_col column search dosing time.  one columns can x, others ignored.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_first_dose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the time of the first dose — sdtm_first_dose","text":"data frame one column grouping level generated  dplyr::group_by (USUBJID column used grouping   groups present) one additional column named \"DTC_first_dose\"   containing date time first dose.","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_terminology.html","id":null,"dir":"Reference","previous_headings":"","what":"The current SDTM terminology — sdtm_terminology","title":"The current SDTM terminology — sdtm_terminology","text":"SDTM terminology used reserved words lists codes can used values SDTM standard.  version date download available via attr(sdtm_terminology, \"version\").","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_terminology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The current SDTM terminology — sdtm_terminology","text":"","code":"sdtm_terminology"},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_terminology.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The current SDTM terminology — sdtm_terminology","text":"code Unique numeric code randomly generated NCI Thesaurus (NCIt) assigned individual CDISC controlled terms. codelist_code Unique numeric code randomly generated NCI Thesaurus (NCIt) assigned SDTM parent codelist names. code repeated controlled term (aka permissible value) belonging codelist. **NOTE - light blue highlighting used identify beginning new SDTM codelist applicable term set. codelist_extensible_yes_no Defines controlled terms may added codelist. New terms may added existing codelist values codelist \"Yes\" Column C long terms duplicates synonyms existing terms. expectation sponsors use published controlled terminology standard baseline codelists defined \"extensible\" (\"Yes\") may terms added sponsor internally.  codelists \"\" Column C sponsor organizations may add published lists. Suggestions new terms may requested New Term Request Page. codelist_name Contains descriptive name codelist. Codelist Code, Codelist Name repeated controlled term belonging codelist. CDISC_submission_value IMPORTANT COLUMN: Currently specific value expected submissions. value corresponds SDTM Codelist Name indicated light blue shading. CDISC_synonym identifies applicable synonyms CDISC Submission Value Column E. terms submitted, included collection mapping purposes.**NOTE - especially important instances Test name Parameter Test name contains corresponding Test Code Parameter Test Code. CDISC_definition identifies CDISC definition particular term. many cases existing NCI definition used. source definition noted parentheses (e.g. NCI, CDISC glossary). NCI_preferred_term identifies NCI preferred name term identified NCIt. **NOTE - column designates human readable, fully specified preferred term corresponding NCI c-code, especially helpful searching NCIt get entire concept links instances term.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_terminology.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The current SDTM terminology — sdtm_terminology","text":"description columns draw https://evs.nci.nih.gov/ftp1/CDISC/SDTM/SDTM CDISC ReadMe.doc, column names modified slightly work better R.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_time_actual.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate actual times from dates and times — sdtm_time_actual","title":"Generate actual times from dates and times — sdtm_time_actual","text":"Generate actual times dates times","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_time_actual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate actual times from dates and times — sdtm_time_actual","text":"","code":"sdtm_time_actual(x, ...)  # S3 method for list sdtm_time_actual(x, ...)  # S3 method for data.frame sdtm_time_actual(   x,   ref_col = \"DTC_first_dose\",   dtc_col_pattern = \"DTC$\",   units = \"hours\",   tz = NULL,   ... )"},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_time_actual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate actual times from dates and times — sdtm_time_actual","text":"x SDTM data set ... Passed methods. ref_col character name column use reference time point. dtc_col_pattern regex use select columns use actual time generation.  regex also used modify name. units units report actual time (passed .numeric). tz time zone difftime (default used .null(tz)).","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/sdtm_time_actual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate actual times from dates and times — sdtm_time_actual","text":"x new columns matching dtc_col_pattern named  gsub(pattern=dtc_col_pattern, replacement=paste0(\"actual_\", units),   names(x)) new columns actual time numerical values   matching units.","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/simplify_sdtm_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify the names of an SDTM data.frame to remove the DOMAIN from name\nprefixes. — simplify_sdtm_names","title":"Simplify the names of an SDTM data.frame to remove the DOMAIN from name\nprefixes. — simplify_sdtm_names","text":"Simplify names SDTM data.frame remove DOMAIN name prefixes.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/simplify_sdtm_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify the names of an SDTM data.frame to remove the DOMAIN from name\nprefixes. — simplify_sdtm_names","text":"","code":"simplify_sdtm_names(x)"},{"path":"https://billdenney.github.io/Rsdtm/reference/simplify_sdtm_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify the names of an SDTM data.frame to remove the DOMAIN from name\nprefixes. — simplify_sdtm_names","text":"x data.frame SDTM data single domain.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/simplify_sdtm_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify the names of an SDTM data.frame to remove the DOMAIN from name\nprefixes. — simplify_sdtm_names","text":"x DOMAIN removed names.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/simplify_sdtm_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simplify the names of an SDTM data.frame to remove the DOMAIN from name\nprefixes. — simplify_sdtm_names","text":"WARNING: Currently, implemented looking domain   stripping characters beginning column names.    column names incidentally start two   characters, initial two characters removed error (please   report bug).","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/standardize_sdtm_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize the SDTM ID columns (STUDYID, USUBJID, and SUBJID) — standardize_sdtm_id","title":"Standardize the SDTM ID columns (STUDYID, USUBJID, and SUBJID) — standardize_sdtm_id","text":"Standardize SDTM ID columns (STUDYID, USUBJID, SUBJID)","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/standardize_sdtm_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize the SDTM ID columns (STUDYID, USUBJID, and SUBJID) — standardize_sdtm_id","text":"","code":"standardize_sdtm_id(   data,   id,   studyid,   sep_usubjid = \"-\",   allow_missing_id = FALSE )"},{"path":"https://billdenney.github.io/Rsdtm/reference/standardize_sdtm_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize the SDTM ID columns (STUDYID, USUBJID, and SUBJID) — standardize_sdtm_id","text":"data data.frame similar standard IDs added id data.frame list data.frames merge identifiers data studyid character scalar indicating study number sep_usubjid character scalar separating STUDYID SUBJID allow_missing_id acceptable USUBJID SUBJID missing?","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/standardize_sdtm_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize the SDTM ID columns (STUDYID, USUBJID, and SUBJID) — standardize_sdtm_id","text":"data.frame columns STUDYID, USUBJID, SUBJID   identifier columns removed.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/strip_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove attributes from an object — strip_attributes","title":"Remove attributes from an object — strip_attributes","text":"Remove attributes object","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/strip_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove attributes from an object — strip_attributes","text":"","code":"strip_attributes(x, specific = NULL, ...)  # S3 method for data.frame strip_attributes(x, specific = NULL, columns_only = TRUE, ...)  # S3 method for default strip_attributes(x, specific = NULL, ...)"},{"path":"https://billdenney.github.io/Rsdtm/reference/strip_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove attributes from an object — strip_attributes","text":"x object remove attributes specific NULL, attributes removed.  character vector, named attributes removed. ... Passed `strip_attributes()` methods. columns_only strip attributes data.frame; strip columns data.frame.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/strip_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove attributes from an object — strip_attributes","text":"x fewer attributes.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/supp_reformat.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat a --SUPP SDTM domain into a list of data.frames ready for merging\ninto the primary domain. — supp_reformat","title":"Reformat a --SUPP SDTM domain into a list of data.frames ready for merging\ninto the primary domain. — supp_reformat","text":"Reformat --SUPP SDTM domain list data.frames ready merging primary domain.","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/supp_reformat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat a --SUPP SDTM domain into a list of data.frames ready for merging\ninto the primary domain. — supp_reformat","text":"","code":"supp_reformat(x, auto_convert = FALSE)"},{"path":"https://billdenney.github.io/Rsdtm/reference/supp_reformat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat a --SUPP SDTM domain into a list of data.frames ready for merging\ninto the primary domain. — supp_reformat","text":"x --SUPP SDTM domain object auto_convert data automatically converted using `type_convert()`?","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/supp_reformat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat a --SUPP SDTM domain into a list of data.frames ready for merging\ninto the primary domain. — supp_reformat","text":"list length unique(x$IDVAR)   data.frames ready merging primary dataset.","code":""},{"path":[]},{"path":"https://billdenney.github.io/Rsdtm/reference/valid_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame with 4 columns and one row per valid SDTM version/IG/IG version\ncombination — valid_versions","title":"A data.frame with 4 columns and one row per valid SDTM version/IG/IG version\ncombination — valid_versions","text":"data.frame 4 columns one row per valid SDTM version/IG/IG version combination","code":""},{"path":"https://billdenney.github.io/Rsdtm/reference/valid_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame with 4 columns and one row per valid SDTM version/IG/IG version\ncombination — valid_versions","text":"","code":"valid_versions"},{"path":"https://billdenney.github.io/Rsdtm/reference/valid_versions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame with 4 columns and one row per valid SDTM version/IG/IG version\ncombination — valid_versions","text":"SDTM SDTM version IG_NAME implementation guide (IG) name used IG_VERSION implemetation guide (IG) version archived SDTM version/IG pair archived (    used current studies)","code":""}]
