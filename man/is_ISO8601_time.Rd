% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iso8601_regexp.R
\name{is_ISO8601_time}
\alias{is_ISO8601_time}
\title{Determine if a string is an ISO 8601 time}
\usage{
is_ISO8601_time(x, ...)
}
\arguments{
\item{x}{A vector of character strings to test}

\item{...}{
  Arguments passed on to \code{\link[=pattern_ISO8601_time]{pattern_ISO8601_time}}
  \describe{
    \item{\code{truncated}}{Should the date be allowed to be truncated?  An integer
indicating the highest required precision (0=second is required, 1=minute, and
2=hour).  A value of 3 will allow an empty string to match.}
    \item{\code{allow_fractional_hours,allow_fractional_minutes}}{Not yet supported}
    \item{\code{allow_fractional_seconds}}{Should fractional seconds be allowed?}
    \item{\code{fractional_digits}}{How many digits are allowed in fractional time
units?  \code{0} indicates that they are not allowed, and \code{Inf}
indicates any number are allowed)}
    \item{\code{pattern_decimal_mark}}{What regular expression patterns should be
allowed for the decimal mark?  Comma and period are both allowed in the
standard and by default.}
    \item{\code{timezone}}{Should the timezone be optional (NA, default), required
(TRUE), or omitted (FALSE)?}
    \item{\code{allow_leap_second}}{Should leap seconds (61 seconds in a minute) be
allowed?}
    \item{\code{require_T}}{Require the "T" at the beginning of the time?  TRUE, FALSE,
or NA (optional)}
  }}
}
\description{
Determine if a string is an ISO 8601 time
}
\seealso{
Other ISO8601 String checking: 
\code{\link{is_ISO8601_calendar_datetime}()},
\code{\link{is_ISO8601_calendar_date}()},
\code{\link{is_ISO8601_ordinal_datetime}()},
\code{\link{is_ISO8601_timezone}()},
\code{\link{is_ISO8601_week_datetime}()}
}
\concept{ISO8601 String checking}
